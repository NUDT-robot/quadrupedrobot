// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: matlabidentification.proto

#ifndef PROTOBUF_matlabidentification_2eproto__INCLUDED
#define PROTOBUF_matlabidentification_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace matlab {
namespace msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_matlabidentification_2eproto();
void protobuf_AssignDesc_matlabidentification_2eproto();
void protobuf_ShutdownFile_matlabidentification_2eproto();

class Identification;

// ===================================================================

class Identification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:matlab.msgs.Identification) */ {
 public:
  Identification();
  virtual ~Identification();

  Identification(const Identification& from);

  inline Identification& operator=(const Identification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Identification& default_instance();

  void Swap(Identification* other);

  // implements Message ----------------------------------------------

  inline Identification* New() const { return New(NULL); }

  Identification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Identification& from);
  void MergeFrom(const Identification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Identification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double MatElement = 1;
  int matelement_size() const;
  void clear_matelement();
  static const int kMatElementFieldNumber = 1;
  double matelement(int index) const;
  void set_matelement(int index, double value);
  void add_matelement(double value);
  const ::google::protobuf::RepeatedField< double >&
      matelement() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_matelement();

  // repeated double torque = 2;
  int torque_size() const;
  void clear_torque();
  static const int kTorqueFieldNumber = 2;
  double torque(int index) const;
  void set_torque(int index, double value);
  void add_torque(double value);
  const ::google::protobuf::RepeatedField< double >&
      torque() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_torque();

  // repeated double contactforce = 3;
  int contactforce_size() const;
  void clear_contactforce();
  static const int kContactforceFieldNumber = 3;
  double contactforce(int index) const;
  void set_contactforce(int index, double value);
  void add_contactforce(double value);
  const ::google::protobuf::RepeatedField< double >&
      contactforce() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_contactforce();

  // @@protoc_insertion_point(class_scope:matlab.msgs.Identification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< double > matelement_;
  mutable int _matelement_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > torque_;
  mutable int _torque_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > contactforce_;
  mutable int _contactforce_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_matlabidentification_2eproto();
  friend void protobuf_AssignDesc_matlabidentification_2eproto();
  friend void protobuf_ShutdownFile_matlabidentification_2eproto();

  void InitAsDefaultInstance();
  static Identification* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Identification

// repeated double MatElement = 1;
inline int Identification::matelement_size() const {
  return matelement_.size();
}
inline void Identification::clear_matelement() {
  matelement_.Clear();
}
inline double Identification::matelement(int index) const {
  // @@protoc_insertion_point(field_get:matlab.msgs.Identification.MatElement)
  return matelement_.Get(index);
}
inline void Identification::set_matelement(int index, double value) {
  matelement_.Set(index, value);
  // @@protoc_insertion_point(field_set:matlab.msgs.Identification.MatElement)
}
inline void Identification::add_matelement(double value) {
  matelement_.Add(value);
  // @@protoc_insertion_point(field_add:matlab.msgs.Identification.MatElement)
}
inline const ::google::protobuf::RepeatedField< double >&
Identification::matelement() const {
  // @@protoc_insertion_point(field_list:matlab.msgs.Identification.MatElement)
  return matelement_;
}
inline ::google::protobuf::RepeatedField< double >*
Identification::mutable_matelement() {
  // @@protoc_insertion_point(field_mutable_list:matlab.msgs.Identification.MatElement)
  return &matelement_;
}

// repeated double torque = 2;
inline int Identification::torque_size() const {
  return torque_.size();
}
inline void Identification::clear_torque() {
  torque_.Clear();
}
inline double Identification::torque(int index) const {
  // @@protoc_insertion_point(field_get:matlab.msgs.Identification.torque)
  return torque_.Get(index);
}
inline void Identification::set_torque(int index, double value) {
  torque_.Set(index, value);
  // @@protoc_insertion_point(field_set:matlab.msgs.Identification.torque)
}
inline void Identification::add_torque(double value) {
  torque_.Add(value);
  // @@protoc_insertion_point(field_add:matlab.msgs.Identification.torque)
}
inline const ::google::protobuf::RepeatedField< double >&
Identification::torque() const {
  // @@protoc_insertion_point(field_list:matlab.msgs.Identification.torque)
  return torque_;
}
inline ::google::protobuf::RepeatedField< double >*
Identification::mutable_torque() {
  // @@protoc_insertion_point(field_mutable_list:matlab.msgs.Identification.torque)
  return &torque_;
}

// repeated double contactforce = 3;
inline int Identification::contactforce_size() const {
  return contactforce_.size();
}
inline void Identification::clear_contactforce() {
  contactforce_.Clear();
}
inline double Identification::contactforce(int index) const {
  // @@protoc_insertion_point(field_get:matlab.msgs.Identification.contactforce)
  return contactforce_.Get(index);
}
inline void Identification::set_contactforce(int index, double value) {
  contactforce_.Set(index, value);
  // @@protoc_insertion_point(field_set:matlab.msgs.Identification.contactforce)
}
inline void Identification::add_contactforce(double value) {
  contactforce_.Add(value);
  // @@protoc_insertion_point(field_add:matlab.msgs.Identification.contactforce)
}
inline const ::google::protobuf::RepeatedField< double >&
Identification::contactforce() const {
  // @@protoc_insertion_point(field_list:matlab.msgs.Identification.contactforce)
  return contactforce_;
}
inline ::google::protobuf::RepeatedField< double >*
Identification::mutable_contactforce() {
  // @@protoc_insertion_point(field_mutable_list:matlab.msgs.Identification.contactforce)
  return &contactforce_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace matlab

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_matlabidentification_2eproto__INCLUDED
